{"version":3,"file":"js/discover.cae47839.js","mappings":"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","sources":["webpack://imvue/./src/utils/axios-config.js","webpack://imvue/./src/components/IM/Friend/FriendList.vue","webpack://imvue/./src/components/IM/Friend/FriendChat.vue","webpack://imvue/./src/components/IM/Friend/FriendDrawer.vue","webpack://imvue/./src/components/IM/Friend/FriendDrawer.vue?b07e","webpack://imvue/./src/components/IM/Friend/FriendChat.vue?59ca","webpack://imvue/./src/components/IM/Friend/FriendList.vue?e2ce"],"sourcesContent":["import axios from 'axios';\nimport { ElMessage } from \"element-plus\";\nimport {userCipherFrontend, userCipherBackend} from \"@/utils/encrypt\";\nimport {backendBaseUrl} from \"@/utils/base-url-setting\";\n\nconst axios_config = axios.create({\n    baseURL: backendBaseUrl,\n    timeout: 10000\n})\n\n// 设置Axios的请求拦截器\naxios_config.interceptors.request.use(\n    config => {\n        config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n\n        // 如果访问路径中包含upload，则不进行Base64编码\n        if (!config.url.includes('upload')) {\n            if (config.data) {\n                // 将请求数据 config.data 进行加密\n                const dd = userCipherFrontend.encrypt(JSON.stringify(config.data));\n                // config.data中存储数据格式为：\n                // {\n                //     data: '加密后的数据',\n                //     pos: '加密位置',\n                //     mac: '',\n                //     length: ''\n                // }\n                config.data = {\n                    data: dd.cipherText,\n                    position: dd.position,\n                    mac: '',\n                    length: 0\n                };\n            }\n        }\n        return config;\n    },\n    error => {\n        console.log('request error', error);\n        return Promise.reject(error);\n    }\n);\n\n// 设置Axios的响应拦截器\n// 如果token过期（返回401），则跳转到登录页面\naxios_config.interceptors.response.use(\n    response => {\n        // return response;\n        // 将相应数据 response.data.data 进行Base64解码（使用UTF-8）\n        if (response.data.data) {\n            const encryptedData = response.data.en_data.data;\n            const position = response.data.en_data.position;\n            let decryptedData = '';\n            try{\n                decryptedData = userCipherBackend.decrypt(encryptedData, position);\n            } catch (e) {\n                ElMessage.error('解密失败，请重新登录获取密钥');\n                localStorage.clear();\n                this.$router.push('/login');\n            }\n            response.data.data = JSON.parse(decryptedData);\n        }\n        return response;\n    },\n    error => {\n        console.log('error', error)\n        if (error.response.status === 401) {\n            ElMessage.error('登录无效或过期，请重新登录');\n            localStorage.clear();\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n\nexport default axios_config\n","<template>\n    <div class=\"friend-container\">\n        <div class=\"chat-list\">\n            <h2 style=\"padding-left: 20px\">终端列表</h2>\n            <el-menu class=\"el-menu-rooms\">\n                <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n                    <el-menu-item\n                        class=\"el-menu-item-button\"\n                        v-for=\"friend in friends\"\n                        :key=\"friend.ID.toString()\"\n                        :index=\"friend.ID\"\n                        @click=\"fetchFriendInfo(friend.ID)\">\n                        {{ friend.username }}\n                    </el-menu-item>\n                </el-scrollbar>\n            </el-menu>\n\n            \n        </div>\n\n        <div class=\"friend-details\">\n            <FriendChat v-if=\"activeFriendId\" :activeFriend=\"activeFriend\" />\n        </div>\n    </div>\n    \n</template>\n\n<script>\nimport axios_config from \"@/utils/axios-config\";\nimport FriendChat from \"@/components/IM/Friend/FriendChat.vue\";\nexport default {\n    data() {\n        return {\n            friends: [],\n            activeFriendId: null,\n            drawer: false,\n            ifFetch: false,\n            activeFriend: null,\n        };\n    },\n    components: {\n        FriendChat\n    },\n    watch: {\n        ifFetch() {\n            this.selectNoFriend();\n            this.drawer = false;\n            this.ifFetch = false;\n        }\n    },\n    created() {\n        this.fetchFriends();\n    },\n    methods: {\n        selectNoFriend() {\n            this.activeFriend = null;\n            this.activeFriendId = null;\n            this.fetchFriends();\n        },\n        createdRoomBoxwithChosenFriend() {\n            const description = \"chat with\" + this.activeFriend.username;\n            this.$emit('createRoom', description);\n        },\n        async fetchFriends() {\n            try {\n                const response = await axios_config.get('/api/user/friends');\n                this.friends = response.data.data;\n                // 排除自己\n                this.friends = this.friends.filter(friend => friend.ID.toString() !== localStorage.getItem('userId').toString());\n            } catch (error) {\n            }\n        },\n        fetchFriendInfo(id) {\n            this.activeFriendId = id;\n            this.activeFriend = this.friends.find(friend => friend.ID === id);\n\n        },\n\n    }\n};\n</script>\n\n<style>\n.friend-container {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: row;\n}\n\n.chat-list {\n    padding: 20px;\n    width: 200px;\n    display: flex;\n    flex-direction: column;\n    border-right: 1px solid #ffffff;\n    background: linear-gradient(180deg,#f0edf7 .03%,#ebeaf5 32.19%,#e8e8f3 68.86%,#e4eaf7 99.12%);\n}\n\n.el-menu-rooms {\n    border: none;\n    overflow-y: auto;\n    background: none;\n}\n\n.el-menu-item-button {\n    background: none;\n    border-bottom: #333333 1px;\n    border-radius: 10px;\n}\n\n.el-menu-item-button:hover {\n    background: #ffffff;\n}\n\n\n.friend-details {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n.new-friend-button {\n    margin: 20px;\n    height: 40px;\n    background: linear-gradient(135deg, #897dfb, #3471f6);\n    border: none;\n}\n</style>\n","<template>\n    <div class=\"friend-chat-container\">\n        <!-- 显示这个friend的基本资料    -->\n        <div class=\"friend-chat-info-container\">\n            <div class=\"friend-avatar\">\n                <el-avatar :src=\"avatarUrl()\" :size=\"80\" class=\"user-avatar\" shape=\"square\"></el-avatar>\n            </div>\n            <div class=\"friend-username\">\n                {{ userInfo.username || 'No username provided' }}\n            </div>\n            <div class=\"friend-details\">\n                <p>邮箱: {{ userInfo.email || 'No email provided' }}</p>\n                <p>地区: {{ userInfo.country || '中国' }}</p>\n            </div>\n            <div class=\"friend-more\">\n                <el-icon @click=\"drawer = true\" style=\"cursor: pointer\">\n                    <More />\n                </el-icon>\n                <FriendDrawer v-model=\"drawer\" v-model:ifFetch=\"ifFetch\" :friendID=\"activeFriend.ID\" :friend=\"activeFriend\" />\n            </div>\n        </div>\n\n        <el-divider style=\"margin: 20px 0\"/>\n\n        <!-- 和这个friend共同的chatroom -->\n        <div class=\"friend-chat-list-container\">\n\n            <el-menu class=\"el-menu-rooms friend-chat-list-menu\"  v-if=\"roomsBetween.length>0\">\n                <h2 style=\"padding-left: 20px;margin: 0 0 10px;\">共同通讯室</h2>\n                <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n                    <el-menu-item\n                            class=\"el-menu-item-button\"\n                            style=\"font-size: large\"\n                            v-for=\"room in roomsBetween\"\n                            :key=\"room.ID\"\n                            :index=\"room.ID.toString()\"\n                            @click=\"jumpToRoom(room)\">\n                        {{ room.name }}\n                    </el-menu-item>\n                </el-scrollbar>\n            </el-menu>\n\n            <el-empty v-else description=\"暂无共同通讯室\"></el-empty>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios_config from \"@/utils/axios-config\";\nimport {ElAvatar, ElDivider, ElMessage} from \"element-plus\";\nimport {backendBaseUrl} from \"@/utils/base-url-setting\";\nimport FriendDrawer from \"@/components/IM/Friend/FriendDrawer.vue\";\n\nexport default {\n    name: 'FriendChat',\n    components: {FriendDrawer, ElAvatar, ElDivider},\n    props: {\n        activeFriend: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            roomsBetween: [], // 存储聊天室列表，两者共同的聊天室\n            userInfo: {},\n            ifFetch: false,\n            drawer: false,\n        };\n    },\n    watch: {\n        activeFriend() {\n            this.fetchRoomsWithFriend();\n            this.fetchFriendInfo();\n        },\n        ifFetch() {\n            this.drawer = false;\n            this.ifFetch = false;\n        }\n    },\n    created() {\n        this.fetchRoomsWithFriend(); // 获取聊天室列表\n        this.fetchFriendInfo();\n    },\n    methods: {\n        avatarUrl() {\n            return backendBaseUrl + this.userInfo.avatar;\n        },\n        async fetchRoomsWithFriend() {\n            try {\n                const response = await axios_config.get('/api/user/common_rooms', {\n                    params: {\n                        friend_id: this.activeFriend.ID\n                    }\n                })\n                if (response.data.code === 0) {\n                    this.roomsBetween = response.data.data;\n                } else {\n                    ElMessage.error('获取聊天室列表失败: ', response.data.msg);\n                }\n            } catch (error) {\n                ElMessage.error('Failed to fetch rooms', error);\n            }\n        },\n        async fetchFriendInfo() {\n            try {\n                const response = await axios_config.get('/api/user/info', {\n                    params: {\n                        user_id: this.activeFriend.ID\n                    }\n                });\n                if (response.data.code === 0) {\n                    this.userInfo = response.data.data;\n                } else {\n                    ElMessage.error('获取用户信息失败: ', response.data.msg);\n                }\n            } catch (error) {\n                ElMessage.error('Failed to fetch friend information:', error);\n            }\n        },\n        jumpToRoom(room) {\n            // 首先将room的信息存储在Vuex中\n            this.$store.commit('setActiveRoom', room);\n            // 然后跳转到聊天室\n            this.$router.push({ path: '/im/chat' });\n        }\n    }\n};\n</script>\n\n<style>\n.friend-chat-container {\n    width: calc(100% - 40px);\n    height: calc(100% - 60px - 40px);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 20px;\n    margin: 0;\n}\n\n.friend-chat-info-container {\n    display: grid;\n    grid-template-columns: repeat(20, 1fr);\n    grid-template-rows: repeat(5, 30px);\n    grid-column-gap: 0;\n    grid-row-gap: 0;\n}\n\n.friend-avatar {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.friend-username {\n    grid-area: 2 / 4 / 4 / 10;\n    font-size: 24px;\n    font-weight: bold;\n    color: #000000;\n}\n\n.friend-details {\n    margin-top: 10px;\n    grid-area: 3 / 4 / 6 / 19;\n    color: #8b8a8a;\n}\n\n.friend-details p {\n    margin: 0 0 5px;\n}\n\n.friend-more {\n    grid-area: 2 / 20 / 3 / 21;\n}\n\n.friend-chat-list-container {\n    width: 100%;\n    margin: 20px;\n}\n\n.friend-chat-list-menu {\n    width: 100%;\n}\n\n\n</style>\n","<template>\n    <el-drawer show-close drawe>\n        <template #header>\n            <h2>{{friend.username}}</h2>\n        </template>\n\n        <el-card style=\"max-width: 480px\">\n            <el-button type=\"primary\" class=\"changedescription\" @click=\"createRoomChatWithThisGuyBox(friend.ID, friend.username)\">创建聊天室</el-button>\n        </el-card>\n        <template #footer>\n            <el-button type=\"danger\">删除终端</el-button>\n        </template>\n    </el-drawer>\n</template>\n\n<script>\nimport axios_config from \"@/utils/axios-config\";\nimport {ElMessage, ElMessageBox} from \"element-plus\";\nimport store from \"@/store/store\";\nexport default {\n    name: 'FriendDrawer',\n    props: {\n        friend: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            roomUsers: []\n        };\n    },\n    watch: {\n    },\n    created() {\n    },\n    computed: {\n        activeRoom() {\n            return store.state.activeRoom; // 从 Vuex store 中获取激活的房间ID\n        }\n    },\n    methods: {\n        createRoomChatWithThisGuyBox(ID, username) {\n            ElMessageBox.prompt(\n                    '请输入新的房间名称',\n                    '创建与' + username + '的聊天室',\n                    {\n                        inputValue: 'chat with ' + username,\n                        confirmButtonText: '创建',\n                        cancelButtonText: '取消',\n                        inputPattern: /\\S/,\n                        inputErrorMessage: '房间名称不能为空'\n                    }\n            ).then(({ value }) => {\n                if (!value) {\n                    ElMessage.error('房间名称不能为空');\n                    return;\n                }\n                this.createRoomChatWithThisGuy(ID, username, value);\n            }).catch(() => {\n                ElMessage.info('创建');\n            });\n        },\n        async createRoomChatWithThisGuy(ID, username, roomname) {\n            // ID不能是我自己的ID\n            if (ID.toString() === localStorage.getItem('userId')) {\n                ElMessage.error('不能和自己聊天');\n                return false;\n            }\n            // 创建我和他之间的聊天室，跳转到/im/chat界面\n            const description = \"自动创建\" + roomname\n            try {\n                const response = await axios_config.post('/api/room/create', {\n                    'name': roomname,\n                    'description': description,\n                });\n                if (response.data.code !== 0) {\n                    ElMessage.error(response.data.msg);\n                    return false;\n                }\n                this.roomID = response.data.data.ID;\n                // 把他加入到聊天室中\n                const response2 = await axios_config.post('/api/room/add_user', {\n                    'room_id': response.data.data.ID,\n                    'user_name': username,\n                    'role': 'member'\n                });\n\n                // 创建成功，跳转到聊天室界面\n                this.$store.commit('setActiveRoom', response.data.data);\n                this.$router.push({ path: '/im/chat' });\n\n                ElMessage.success('创建聊天室成功, 跳转到聊天室界面');\n                // await this.fetchRoomUsers();\n\n            } catch (error) {\n                ElMessage.error('创建聊天室失败');\n            }\n\n        },\n\n        async fetchRoomUsers() {\n            // 获取房间成员列表\n            try {\n                const response = await axios_config.get('/api/room/members?room_id=' + this.roomID);\n\n                if (response.data.code === 0) {\n                    this.roomUsers = response.data.data;\n                } else {\n                    ElMessage.error(response.data.msg);\n                }\n            } catch (error) {\n                ElMessage.error('获取房间成员列表失败');\n            }\n\n\n        },\n        async getHistoryMessages(lastMessageId, limit) {\n            try {\n                const response = await axios_config.post(\n                    '/api/message/list',\n                    {\n                        \"room_id\": this.roomID,\n                        \"last_message_id\": lastMessageId,\n                        \"limit\": limit\n                    });\n                if (response.data.data.length === 0) {\n                    ElMessage.info('没有更多历史消息了')\n                    return;\n                }\n                // response.data.data 获取的消息列表ID是从大到小的，需要将其反转\n                this.messages = [...response.data.data.reverse(), ...this.messages];\n            } catch (error) {\n                ElMessage.error('Failed to fetch messages:', error);\n            }\n        },\n    }\n};\n</script>","import { render } from \"./FriendDrawer.vue?vue&type=template&id=0aaa4448\"\nimport script from \"./FriendDrawer.vue?vue&type=script&lang=js\"\nexport * from \"./FriendDrawer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FriendChat.vue?vue&type=template&id=40d2dda7\"\nimport script from \"./FriendChat.vue?vue&type=script&lang=js\"\nexport * from \"./FriendChat.vue?vue&type=script&lang=js\"\n\nimport \"./FriendChat.vue?vue&type=style&index=0&id=40d2dda7&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FriendList.vue?vue&type=template&id=1d4b76a0\"\nimport script from \"./FriendList.vue?vue&type=script&lang=js\"\nexport * from \"./FriendList.vue?vue&type=script&lang=js\"\n\nimport \"./FriendList.vue?vue&type=style&index=0&id=1d4b76a0&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["axios_config","axios","create","baseURL","backendBaseUrl","timeout","interceptors","request","use","config","headers","Authorization","localStorage","getItem","url","includes","data","dd","userCipherFrontend","encrypt","JSON","stringify","cipherText","position","mac","length","error","console","log","Promise","reject","response","encryptedData","en_data","decryptedData","userCipherBackend","decrypt","e","ElMessage","clear","$router","push","parse","status","window","location","href","class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_menu","default","_withCtx","_component_el_scrollbar","_Fragment","_renderList","$data","friends","friend","_createBlock","_component_el_menu_item","key","ID","toString","index","onClick","$event","$options","fetchFriendInfo","_createTextVNode","_toDisplayString","username","_","_hoisted_4","activeFriendId","_component_FriendChat","activeFriend","_createCommentVNode","_component_el_avatar","src","avatarUrl","size","shape","userInfo","_hoisted_5","email","country","_hoisted_6","_component_el_icon","_cache","drawer","_component_More","_component_FriendDrawer","modelValue","ifFetch","friendID","$props","_component_el_divider","_hoisted_7","roomsBetween","_hoisted_8","room","jumpToRoom","name","_component_el_empty","description","_component_el_drawer","drawe","header","footer","_component_el_button","type","_component_el_card","createRoomChatWithThisGuyBox","props","Object","required","roomUsers","watch","created","computed","activeRoom","store","state","methods","ElMessageBox","prompt","inputValue","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","value","this","createRoomChatWithThisGuy","catch","info","roomname","post","code","msg","roomID","$store","commit","path","success","fetchRoomUsers","get","getHistoryMessages","lastMessageId","limit","messages","reverse","__exports__","components","FriendDrawer","ElAvatar","ElDivider","fetchRoomsWithFriend","avatar","params","friend_id","user_id","FriendChat","selectNoFriend","fetchFriends","createdRoomBoxwithChosenFriend","$emit","filter","id","find","render"],"sourceRoot":""}